<Window x:Class="EOG.Game.Simulation.Client.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EOG.Game.Simulation.Client"
        xmlns:cmd ="http://www.galasoft.ch/mvvmlight"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:chartingToolkit="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit"
        mc:Ignorable="d"
        Title="Dice Game"
        WindowState="Maximized"
        >
    <Window.DataContext>
        <local:MainWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="boolToVisibilityCOnverter"/>
        <Style x:Key="WinnerSeriesDataPointStyle" TargetType="{x:Type chartingToolkit:LineDataPoint}">
            <Setter Property="Background" Value="Red"/>
        </Style>
        <Style x:Key="AverageSeriesDataPointStyle" TargetType="{x:Type chartingToolkit:LineDataPoint}">
            <Setter Property="Background" Value="Green"/>
            <Setter Property="Template" Value="{x:Null}"/>
        </Style>
        <chartingToolkit:LinearAxis x:Key="XAxis" Orientation="X" Minimum="{Binding Minimum}" Interval="{Binding Interval}" 
                                    Maximum="{Binding Maximum}"></chartingToolkit:LinearAxis>

        <Style TargetType="{x:Type TextBox}" x:Key="TextBoxStyle">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                Value="{Binding RelativeSource={RelativeSource Self}, 
                       Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ComboBox}" x:Key="ComboBoxStyle">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                Value="{Binding RelativeSource={RelativeSource Self}, 
                       Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="SimulationButtonCommandStyle">
            <Setter Property="IsEnabled" Value="False"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=NoOfGames}" Value="False"/>
                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=NoOfPlayers}" Value="False"/>
                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=PresetComboBox}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsEnabled" Value="True"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="WinnerDataTemplate">
            <StackPanel Background="Orange">
                <Image Source="pack://application:,,,/Images/person-png-icon-2.jpg" Width="40" Height="40"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="LooserDataTemplate">
            <StackPanel Background="LightBlue">
                <Image Source="pack://application:,,,/Images/person-png-icon-2.jpg" Width="40" Height="40"/>
            </StackPanel>
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0" Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Orientation="Vertical" Margin="5">
                <Label Content="Preset"/>
                <ComboBox x:Name="PresetComboBox" ItemsSource="{Binding GamePresets}" 
                          SelectedItem="{Binding SelectedGamePreset,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                          Style="{StaticResource ComboBoxStyle}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding NoOfPlayers}"/>
                                <TextBlock Text=" X "/>
                                <TextBlock Text="{Binding NoOfGames}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>

            <StackPanel Grid.Row="1" Orientation="Vertical" Margin="5">
                <Label Content="Number Of Players"/>
                <TextBox x:Name="NoOfPlayers"  Text="{Binding NoOfPlayers, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle}"/>
            </StackPanel>

            <StackPanel Grid.Row="2" Orientation="Vertical" Margin="5">
                <Label Content="Number Of Games"/>
                <TextBox  x:Name="NoOfGames" Text="{Binding NoOfGames, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle}"/>
            </StackPanel>

            <StackPanel Grid.Row="3" Margin="5" Orientation="Horizontal">
                <Button Content="Play" Margin="5" Width="60" Height="20" Command="{Binding RunSimulationCommand}" Style="{StaticResource SimulationButtonCommandStyle}"/>
                <Button Content="Cancel" Margin="5" Width="60" Height="20" Command="{Binding CancelCommand}">

                </Button>
            </StackPanel>
        </Grid>

        <Grid Grid.Column="1" Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <chartingToolkit:Chart Padding="5" Grid.Row="0"  x:Name="lineChart" VerticalAlignment="Stretch" >
                <chartingToolkit:LineSeries  DependentValuePath="Value" IndependentValuePath="Key" 
                                             DataPointStyle="{StaticResource WinnerSeriesDataPointStyle}"
                                             ItemsSource="{Binding ValueList, NotifyOnSourceUpdated=True}"
                                             IndependentAxis="{StaticResource XAxis}"
                                             IsSelectionEnabled="True"
                                             IsEnabled="True">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </chartingToolkit:LineSeries>
                <chartingToolkit:LineSeries  DependentValuePath="Value" IndependentValuePath="Key" 
                                             ItemsSource="{Binding AverageValueList,NotifyOnSourceUpdated=True}"
                                             DataPointStyle="{StaticResource AverageSeriesDataPointStyle}"
                                             IndependentAxis="{StaticResource XAxis}"
                                             
                                             IsSelectionEnabled="True"/>
            </chartingToolkit:Chart>
            <ListBox Grid.Row="1" ItemsSource="{Binding Players}" Padding="10">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"></StackPanel>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ContentControl Content="{Binding}">
                            <ContentControl.Style>
                                <Style TargetType="{x:Type ContentControl}">
                                    <Setter Property="ContentTemplate" Value="{StaticResource LooserDataTemplate}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}, Path=DataContext.IsWinner}" Value="True">
                                            <Setter Property="ContentTemplate" Value="{StaticResource WinnerDataTemplate}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ListBox>
        </Grid>

        <ProgressBar x:Name = "pg2" Margin = "10" Height = "15" 
                     Grid.Column="1" Width="150"
                     Visibility="{Binding IsTaskRunning,Converter={StaticResource boolToVisibilityCOnverter}}"
                     IsIndeterminate="True"  HorizontalAlignment="Center"/>
    </Grid>
</Window>
